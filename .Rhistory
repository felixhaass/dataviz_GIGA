library(gapminder)
library(tidyverse)
?gapminder
test_plot <- ggplot(gapminder, aes(x = year, y = lifeExp)) + geom_line(alpha = 0.4) + facet_wrap(~continent)
test_plot
test_plot <- ggplot(gapminder, aes(x = year, y = lifeExp, group = country)) + geom_line(alpha = 0.4) + facet_wrap(~continent)
test_plot
install.packages("tidyverse")
install.packages("tidyverse")
?arrange
library(tidyverse)
?arrange
knit_child
library(knitr)
?knit_child
subset
install.packages("socviz")
library(shiny)
ui <- fluidPage(
sliderInput(inputId = "num",
label = "Choose a number",
value = 25, min = 1, max  = 100),
plotOutput = ("hist")
)
server <- function(input, output) {
output$hist <- renderPlot({
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
sliderInput(inputId = "num",
label = "Choose a number",
value = 25, min = 1, max  = 100),
plotOutput = ("hist")
)
server <- function(input, output) {
output$hist <- renderPlot({
hist(rnorm(input$num))
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
sliderInput(inputId = "num",
label = "Choose a number",
value = 25, min = 1, max  = 100),
plotOutput = ("hist")
)
server <- function(input, output) {
output$hist <- renderPlot({
hist(rnorm(input$num))
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
sliderInput(inputId = "num",
label = "Choose a number",
value = 25, min = 1, max  = 100),
plotOutput = ("hist")
)
server <- function(input, output) {
output$hist <- renderPlot({
hist(rnorm(input$num))
})
}
shinyApp(ui, server)
source('~/.active-rstudio-document')
library(shiny)
ui <- fluidPage(
sliderInput(inputId = "num",
label = "Choose a number",
value = 25, min = 1, max = 100),
plotOutput("hist")
)
server <- function(input, output) {
output$hist <- renderPlot({
hist(rnorm(input$num))
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
sliderInput(inputId = "num",
label = "Choose a number",
value = 25, min = 1, max  = 100),
plotOutput = ("hist")
)
server <- function(input, output) {
output$hist <- renderPlot({
hist(rnorm(input$num))
})
}
shinyApp(ui, server)
g <- graph_from_data_frame(relations, directed=F, vertices=actors)
library(igraph)
g <- graph_from_data_frame(relations, directed=F, vertices=actors)
source('~/.active-rstudio-document')
g <- graph_from_data_frame(relations, directed=F, vertices=actors)
g
plot(g)
actors
relations
nodes
node
?graph_from_data_frame
edges$to
actors <- data.frame(name=c("Alice", "Bob", "Cecil", "David",
"Esmeralda"),
age=c(48,33,45,34,21))
relations <- data.frame(from=c("Bob", "Cecil", "Cecil", "David",
"David", "Esmeralda"),
to=c("Alice", "Bob", "Alice", "Alice", "Bob", "Alice"))
graph_from_data_frame(nodes, directed = F, vertices = edges)
graph_from_data_frame(actors, directed = F, vertices = relations)
graph_from_data_frame(actors, directed = F, relations)
relations <- data.frame(from=c("Bob", "Cecil", "Cecil", "David",
"David", "Esmeralda"),
to=c("Alice", "Bob", "Alice", "Alice", "Bob", "Alice")) ,
same.dept=c(FALSE,FALSE,TRUE,FALSE,FALSE,TRUE),
friendship=c(4,5,5,2,1,1), advice=c(4,5,5,4,2,3))
source('~/.active-rstudio-document')
graph_from_data_frame(actors, directed = F, relations)
